name: Python CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./app/requirements.txt
          pip install pytest pytest-asyncio

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and deploy
        run: |
          docker-compose -f docker-compose.yml up --build -d
    
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pre-commit

    - name: Run Ruff check and fix
      run: |
        ruff check . --fix  # Automatically fix issues if needed

    - name: Run ruff format
      run: |
        ruff format .  # Format the code
        
    - name: Run pre-commit hooks
      run: pre-commit run --all-files  # Manually run the pre-commit hooks
